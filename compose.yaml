services:

  # PLEX #

  plex:
    container_name: plex
    image: lscr.io/linuxserver/plex:latest
    network_mode: host
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=${UMASK}
      - TZ=${TIME}
      - VERSION=docker
      - DOCKER_MODS=${PARK}:plex
      - TP_THEME=${THEME}
    ports:
      - 32400:32400
    volumes:
      - ${CONFIG}/plex:/config
      - ${SHARE}:/share
    restart: unless-stopped

  sonarr:
    container_name: sonarr
    image: lscr.io/linuxserver/sonarr:latest
    depends_on:
      - prowlarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=${UMASK}
      - TZ=${TIME}
      - DOCKER_MODS=${PARK}:sonarr
      - TP_THEME=${THEME}
    ports:
      - 32402:8989
    volumes:
      - ${CONFIG}/sonarr:/config
      - ${SHARE}:/share
      - ${SHARE}/downloads:/downloads
    restart: unless-stopped

  radarr:
    container_name: radarr
    image: lscr.io/linuxserver/radarr:latest
    depends_on:
      - prowlarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=${UMASK}
      - TZ=${TIME}
      - DOCKER_MODS=${PARK}:radarr
      - TP_THEME=${THEME}
    ports:
      - 32403:7878
    volumes:
      - ${CONFIG}/radarr:/config
      - ${SHARE}:/share
      - ${SHARE}/downloads:/downloads
    restart: unless-stopped
  
  prowlarr:
    container_name: prowlarr
    image: lscr.io/linuxserver/prowlarr:latest
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=${UMASK}
      - TZ=${TIME}
      - DOCKER_MODS=${PARK}:prowlarr
      - TP_THEME=${THEME}
    ports:
      - 32404:9696
    volumes:
      - ${CONFIG}/prowlarr:/config
      - ${SHARE}:/share
      - ${SHARE}/downloads:/downloads
    restart: unless-stopped

  flaresolverr:
    container_name: flaresolverr
    image: ghcr.io/flaresolverr/flaresolverr:latest
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=${UMASK}
      - TZ=${TIME}
      - LOG_LEVEL=info
    ports:
      - 32405:8191
    volumes:
      - ${CONFIG}/flaresolverr:/config
    restart: unless-stopped

  ombi:
    container_name: ombi
    image: lscr.io/linuxserver/ombi:latest
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=${UMASK}
      - TZ=${TIME}
      - DOCKER_MODS=${PARK}:ombi
      - TP_THEME=${THEME}
    ports:
      - 32406:3579
    volumes:
      - ${CONFIG}/ombi:/config
    restart: unless-stopped
  
  gluetun:
    container_name: gluetun
    image: qmcgaw/gluetun:latest
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=${UMASK}
      - TZ=${TIME}
      - VPN_SERVICE_PROVIDER=protonvpn
      - VPN_TYPE=wireguard
      - WIREGUARD_PRIVATE_KEY=REDACTED
      - BLOCK_MALICIOUS=off
    ports:
      - 8080:8080 # SabNZBD
      - 8081:8081 # qBittorrent WebUI
      - 8082:8082 # qBittorrent Backend
    volumes:
      - ${CONFIG}/gluetun:/gluetun
    restart: always

  deunhealth:
    container_name: deunhealth
    image: qmcgaw/deunhealth:latest
    build: .
    environment:
      - TZ=${TIME}
      - HEALTH_SERVER_ADDRESS=127.0.0.1:9999
      - LOG_LEVEL=info
    volumes:
      - ${SOCK}:${SOCK}
    restart: always
  
  qbittorrent:
    container_name: qbittorrent
    image: lscr.io/linuxserver/qbittorrent:latest
    network_mode: 'service:gluetun'
    labels:
      - "deunhealth.restart.on.unhealthy=true"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=${UMASK}
      - TZ=${TIME}
      - WEBUI_PORT=8081
      - TORRENTING_PORT=8082
      - DOCKER_MODS=${PARK}:qbittorrent
      - TP_THEME=${THEME}
    volumes:
      - ${CONFIG}/qbittorrent:/config
      - ${SHARE}/downloads:/downloads
    restart: unless-stopped

  sabnzbd:
    container_name: sabnzbd
    image: lscr.io/linuxserver/sabnzbd:latest
    network_mode: 'service:gluetun'
    labels:
      - "deunhealth.restart.on.unhealthy=true"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=${UMASK}
      - TZ=${TIME}
      - DOCKER_MODS=${PARK}:sabnzbd
      - TP_THEME=${THEME}
    volumes:
      - ${CONFIG}/sabnzbd:/config
      - ${SHARE}/downloads:/downloads
    restart: unless-stopped

  kometa:
    container_name: kometa
    image: kometateam/kometa:latest
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=${UMASK}
      - TZ=${TIME}
      - KOMETA_TIME=03:00
      - KOMETA_CONFIG=/config/config.yml
      - KOMETA_RUN=True
    volumes:
      - ${CONFIG}/kometa:/config
    restart: no

  # WEB SERVICES #

  nginx:
    container_name: nginx
    image: jc21/nginx-proxy-manager:latest
    environment: 
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=${UMASK}
      - TZ=${TIME}
    ports:
      - 80:80
      - 81:81
      - 443:443
    volumes: 
      - ${CONFIG}/nginx/data:/data
      - ${CONFIG}/nginx/ssl:/etc/letsencrypt
    restart: always

  glance:
    container_name: glance
    image: glanceapp/glance:latest
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=${UMASK}
      - TZ=${TIME}
    ports:
      - 8095:8080
    volumes:
      - ${CONFIG}/glance:/app/config
    restart: unless-stopped

  vaultwarden:
    container_name: vaultwarden
    image: vaultwarden/server:latest
    environment: 
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=${UMASK}
      - TZ=${TIME}
      - I_REALLY_WANT_VOLATILE_STORAGE=true
    ports:
      - 8091:80
    volumes: 
      - ${CONFIG}/vaultwarden:/config
    restart: always

  nextcloud:
    container_name: nextcloud
    image: lscr.io/linuxserver/nextcloud:latest
    environment: 
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=${UMASK}
      - TZ=${TIME}
      - VIRTUAL_HOST=REDACTED
      - LETSENCRYPT_HOST=REDACTED
    ports:
      - 8092:443
    volumes: 
      - '${CONFIG}/nextcloud/config:/config'
      - '${CONFIG}/nextcloud/data:/data'
      - '/mnt/share/nextcloud:/share'
    restart: always
  
  # MISC #

  watchtower:
    container_name: watchtower
    image: containrrr/watchtower:latest
    command: --cleanup=true --include-restarting=true --include-stopped=true --interval=86400
    volumes:
      - ${SOCK}:${SOCK}
    restart: always

  sillytavern:
    build: ..
    container_name: sillytavern
    hostname: sillytavern
    network_mode: host
    image: ghcr.io/sillytavern/sillytavern:latest
    environment:
      - NODE_ENV=production
      - FORCE_COLOR=1
    ports:
      - "9000:9000"
    volumes:
      - "${CONFIG}/sillytavern/config:/home/node/app/config"
      - "${CONFIG}/sillytavern/data:/home/node/app/data"
      - "${CONFIG}/sillytavern/plugins:/home/node/app/plugins"
      - "${CONFIG}/sillytavern/extensions:/home/node/app/public/scripts/extensions/third-party"
    restart: unless-stopped

  mealie:
    image: ghcr.io/mealie-recipes/mealie:latest
    container_name: mealie
    restart: unless-stopped
    environment:
      - TZ=${TIME}
      - BASE_URL=REDACTED
      - PUID=${PUID}
      - PGID=${PGID}
      - ALLOW_SIGNUP=false
    volumes:
      - ${CONFIG}/mealie:/app/data
    ports:
      - "9001:9000"
    deploy:
      resources:
        limits:
          memory: 1000M